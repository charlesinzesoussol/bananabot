name: Show VPS Bot Metrics

on:
  workflow_dispatch:

jobs:
  show-metrics:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
          
      - name: Show VPS Bot Metrics
        run: |
          echo "üçå Fetching real bot metrics from VPS..."
          ssh root@${{ secrets.VPS_HOST }} << 'EOF'
            echo "=================================================="
            echo "üçå BANANABOT REAL METRICS FROM VPS"
            echo "=================================================="
            echo "üïí Server Time: $(date)"
            echo ""
            
            # Check if bot is running
            BOT_STATUS=$(systemctl is-active bananabot 2>/dev/null || echo "inactive")
            if [ "$BOT_STATUS" = "active" ]; then
              echo "üü¢ Bot Status: RUNNING"
            else
              echo "üî¥ Bot Status: STOPPED"
            fi
            
            echo ""
            echo "üíæ SYSTEM INFO"
            echo "   Memory: $(free -h | grep '^Mem:' | awk '{print $3"/"$2}')"
            echo "   Disk: $(df -h /opt/bananabot | tail -1 | awk '{print $3"/"$2" ("$5" used)"}')"
            echo ""
            
            # Check data directory
            if [ -d "data/user_galleries" ]; then
              TOTAL_USERS=$(find data/user_galleries -name "*.json" 2>/dev/null | wc -l)
              echo "üë• Total Users: $TOTAL_USERS"
              
              if [ "$TOTAL_USERS" -gt 0 ]; then
                echo "üñºÔ∏è  Analyzing user data..."
                cd /opt/bananabot
                python3 show_metrics.py
              else
                echo "üìà Total Generations: 0"
                echo "üí∞ Total Cost: $0.0000"
                echo "üéØ No usage data yet"
              fi
            else
              echo "‚ùå No data directory found"
              echo "üí° Bot may not have been used yet"
            fi
            
            echo ""
            echo "üõ°Ô∏è  RATE LIMIT PROTECTION"
            echo "   Max: 3 images/hour/user"
            if [ "$TOTAL_USERS" -gt 0 ]; then
              MAX_DAILY=$(echo "$TOTAL_USERS * 3 * 24 * 0.039" | bc -l 2>/dev/null || echo "0")
              echo "   Max Daily Cost: \$$(printf '%.2f' $MAX_DAILY 2>/dev/null || echo '0.00')"
            else
              echo "   Max Daily Cost: \$0.00"
            fi
            
            echo ""
            echo "üìã RECENT LOGS (last 10 lines)"
            journalctl -u bananabot --no-pager -n 10 2>/dev/null || echo "No recent logs"
            
            echo "=================================================="
          EOF