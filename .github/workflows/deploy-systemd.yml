name: Deploy with Systemd

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to VPS with Systemd
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Navigate to bot directory
          cd ~/bananabot || mkdir -p ~/bananabot && cd ~/bananabot
          
          # Pull latest code
          if [ -d ".git" ]; then
            echo "Updating existing repository..."
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/charlesinzesoussol/bananabot.git .
          fi
          
          # Create virtual environment if it doesn't exist
          if [ ! -d "venv" ]; then
            echo "Creating virtual environment..."
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install/update dependencies
          source venv/bin/activate
          echo "Installing dependencies..."
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Check if .env file exists
          if [ ! -f ".env" ]; then
            echo "Creating .env file from GitHub secrets..."
            cat > .env << EOF
          DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
          GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
          EOF
            echo ".env file created"
          fi
          
          # Copy systemd service file
          echo "Setting up systemd service..."
          sudo cp bananabot.service /etc/systemd/system/
          sudo systemctl daemon-reload
          
          # Restart the service
          echo "Restarting BananaBot service..."
          sudo systemctl restart bananabot
          sudo systemctl enable bananabot
          
          # Wait for service to start
          sleep 5
          
          # Check service status
          if sudo systemctl is-active --quiet bananabot; then
            echo "✅ BananaBot service is running!"
            sudo systemctl status bananabot --no-pager
          else
            echo "❌ BananaBot service failed to start"
            sudo journalctl -u bananabot -n 50 --no-pager
            exit 1
          fi