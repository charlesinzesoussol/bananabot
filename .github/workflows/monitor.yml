name: Bot Monitoring & Analytics

on:
  schedule:
    - cron: '*/15 * * * *'  # Every 15 minutes
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Bot Status & Metrics
        id: metrics
        run: |
          # Get system metrics via SSH
          ssh -o ConnectTimeout=30 root@${{ secrets.VPS_HOST }} << 'EOF' > metrics_raw.txt
            echo "=== Bot Status ==="
            systemctl is-active bananabot 2>/dev/null || echo "inactive"
            
            echo "=== Memory Usage ==="
            ps aux | grep "python.*start.py" | grep -v grep | awk '{sum += $4} END {print sum}' | head -1 || echo "0"
            
            echo "=== Disk Usage ==="
            df -h /opt/bananabot 2>/dev/null | tail -1 | awk '{print $5}' | sed 's/%//' || echo "0"
            
            echo "=== Guild Count ==="
            if [ -f /opt/bananabot/bananabot.log ]; then
              grep -c "Logged in to" /opt/bananabot/bananabot.log 2>/dev/null | tail -1 || echo "0"
            else
              echo "0"
            fi
            
            echo "=== Total Downloads ==="
            if [ -f /opt/bananabot/bananabot.log ]; then
              grep -c "Image generated\|download" /opt/bananabot/bananabot.log 2>/dev/null || echo "0"
            else
              echo "0"
            fi
            
            echo "=== Recent Activity (24h) ==="
            if [ -f /opt/bananabot/bananabot.log ]; then
              grep "$(date -d '24 hours ago' '+%Y-%m-%d')\|$(date '+%Y-%m-%d')" /opt/bananabot/bananabot.log 2>/dev/null | grep -c "Image generated" || echo "0"
            else
              echo "0"
            fi
            
            echo "=== Active Users (24h) ==="
            if [ -f /opt/bananabot/data/user_galleries ]; then
              find /opt/bananabot/data/user_galleries -name "*.json" -newer /tmp/24h_marker 2>/dev/null | wc -l || echo "0"
            else
              echo "0"
            fi
            
            echo "=== Total Cost Today ==="
            if [ -f /opt/bananabot/bananabot.log ]; then
              grep "$(date '+%Y-%m-%d')" /opt/bananabot/bananabot.log 2>/dev/null | grep -o "cost.*\$[0-9.]*" | grep -o "[0-9.]*" | awk '{sum += $1} END {print sum}' || echo "0"
            else
              echo "0"
            fi
          EOF
          
          # Create 24h marker for next run
          ssh root@${{ secrets.VPS_HOST }} "touch -d '24 hours ago' /tmp/24h_marker" || true
          
      - name: Generate Metrics JSON
        run: |
          # Parse real metrics from SSH output
          BOT_STATUS=$(sed -n '/=== Bot Status ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "unknown")
          MEMORY_USAGE=$(sed -n '/=== Memory Usage ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          DISK_USAGE=$(sed -n '/=== Disk Usage ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          GUILD_COUNT=$(sed -n '/=== Guild Count ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          TOTAL_DOWNLOADS=$(sed -n '/=== Total Downloads ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          RECENT_ACTIVITY=$(sed -n '/=== Recent Activity ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          ACTIVE_USERS=$(sed -n '/=== Active Users ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          TOTAL_COST=$(sed -n '/=== Total Cost Today ===/,/===/p' metrics_raw.txt | grep -v "===" | head -1 || echo "0")
          
          cat > metrics.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "bot_status": "${BOT_STATUS}",
            "memory_usage": "${MEMORY_USAGE}",
            "disk_usage": "${DISK_USAGE}",
            "guild_count": "${GUILD_COUNT}",
            "total_downloads": "${TOTAL_DOWNLOADS}",
            "recent_activity_24h": "${RECENT_ACTIVITY}",
            "active_users_24h": "${ACTIVE_USERS}",
            "total_cost_today": "${TOTAL_COST}"
          }
          EOF
          
          echo "Generated metrics:"
          cat metrics.json
          
      - name: Commit Metrics
        run: |
          mkdir -p monitoring
          cp metrics.json monitoring/$(date +%Y%m%d_%H%M).json
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add monitoring/
          git commit -m "ðŸ“Š Monitoring data $(date)" || exit 0
          git push